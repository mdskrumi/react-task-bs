{"ast":null,"code":"var _jsxFileName = \"/home/mdskrumi/Code/react-task-bs/unsplash-pics-new/src/components/Detail.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from 'react-query';\n\nconst Detail = () => {\n  const [image, setImage] = useState({});\n  const id = useParams().id;\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(['Image', id], async (_, params) => {\n    const response = await fetch(`https://api.unsplash.com/photos/${params}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Client-ID R4Q_V32stbrWOzb3DpOntSfstan64mljhm-QftIjSCY\"\n      }\n    });\n    return response.json();\n  });\n  useEffect(() => {\n    if (!isLoading) {\n      setImage(data);\n    }\n  }, [isLoading, data, image]);\n  const body = isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui active dimmer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui indeterminate text loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Preparing Image\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    width: \"700px\",\n    src: data.urls.regular,\n    alt: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      border: \"2px solid black\",\n      padding: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" \", data.description || \"The description of the image was not found. :) \", \" \"));\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    }, \"Some Error\");\n  }\n\n  return (\n    /*#__PURE__*/\n    // null\n    React.createElement(\"div\", {\n      className: \"ui container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, body)\n  );\n};\n\nexport default Detail;","map":{"version":3,"sources":["/home/mdskrumi/Code/react-task-bs/unsplash-pics-new/src/components/Detail.js"],"names":["React","useState","useEffect","useParams","useQuery","Detail","image","setImage","id","isLoading","error","data","_","params","response","fetch","method","headers","Authorization","json","body","urls","regular","border","padding","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAGjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,EAAE,GAAGL,SAAS,GAAGK,EAAvB;AAGA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BP,QAAQ,CAAC,CAAC,OAAD,EAAUI,EAAV,CAAD,EAAgB,OAAOI,CAAP,EAAUC,MAAV,KAAqB;AAC5E,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCF,MAAO,EAA3C,EAA8C;AACtEG,MAAAA,MAAM,EAAE,KAD8D;AAEtEC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE;AADV;AAF6D,KAA9C,CAA5B;AAMA,WAAOJ,QAAQ,CAACK,IAAT,EAAP;AACH,GAR0C,CAA3C;AAYAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACO,SAAL,EAAgB;AACZF,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACH;AAEJ,GALQ,EAKN,CAACF,SAAD,EAAYE,IAAZ,EAAkBL,KAAlB,CALM,CAAT;AAQA,QAAMc,IAAI,GAAIX,SAAD,gBACR;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,CADQ,gBAKR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,GAAG,EAAEE,IAAI,CAACU,IAAL,CAAUC,OAAlC;AAA2C,IAAA,GAAG,EAAC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,iBAAV;AAA6BC,MAAAA,OAAO,EAAE;AAAtC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6Db,IAAI,CAACc,WAAL,IAAoB,iDAAjF,MAFH,CALL;;AAUA,MAAIf,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AACD;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKU,IADL;AAFJ;AAOH,CAhDD;;AAkDA,eAAef,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from 'react-query';\n\nconst Detail = () => {\n\n\n    const [image, setImage] = useState({});\n\n    const id = useParams().id;\n\n\n    const { isLoading, error, data } = useQuery(['Image', id], async (_, params) => {\n        const response = await fetch(`https://api.unsplash.com/photos/${params}`, {\n            method: \"GET\",\n            headers: {\n                Authorization: \"Client-ID R4Q_V32stbrWOzb3DpOntSfstan64mljhm-QftIjSCY\",\n            },\n        });\n        return response.json();\n    }\n    );\n\n\n    useEffect(() => {\n        if (!isLoading) {\n            setImage(data);\n        }\n\n    }, [isLoading, data, image])\n\n\n    const body = (isLoading) ?\n        (<div className=\"ui active dimmer\">\n            <div className=\"ui indeterminate text loader\">Preparing Image</div>\n        </div>)\n        :\n        (<div >\n            <img width=\"700px\" src={data.urls.regular} alt=\"img\"></img>\n            <p style={{ border: \"2px solid black\", padding: '20px', }}> {data.description || \"The description of the image was not found. :) \"} </p>\n        </div>)\n\n    if (error) {\n        return <div>Some Error</div>\n    }\n    return (\n        // null\n        <div className=\"ui container\" >\n            {body}\n        </div>\n    )\n\n}\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}
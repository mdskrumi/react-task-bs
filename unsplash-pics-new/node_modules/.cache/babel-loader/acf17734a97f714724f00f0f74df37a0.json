{"ast":null,"code":"var _jsxFileName = \"/home/mdskrumi/Code/react-task-bs/unsplash-pics-new/src/components/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery, QueryCache, ReactQueryCacheProvider } from 'react-query';\nimport SearchBar from \"./SearchBar\";\nimport ImageList from \"./ImageList\";\nconst queryCache = new QueryCache();\n\nconst App = ({\n  setImage\n}) => {\n  const [images, setImages] = useState([]); // const [error_msg, setErrorMsg] = useState(\"\");\n\n  const [term, setTerm] = useState(\"Bangladesh\");\n\n  const onSearchSubmit = term => {\n    console.log(term);\n    setTerm(term);\n  };\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(['Images', 'terms'], async (key, params, ...rest) => {\n    console.log(key);\n    console.log(params);\n    console.log(...rest);\n    const response = await fetch(\"https://api.unsplash.com/search/photos/?query=\" + term, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Client-ID R4Q_V32stbrWOzb3DpOntSfstan64mljhm-QftIjSCY\"\n      }\n    });\n    return response.json();\n  }, {\n    cacheTime: 0\n  });\n  useEffect(() => {\n    if (data && data.results) {\n      setImages(data.results);\n      console.log(images);\n    }\n\n    return () => {\n      queryCache.clear();\n    };\n  }, [isLoading, data]);\n  console.log(data);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    }, 'An error has occurred: ' + error.message);\n  }\n\n  return /*#__PURE__*/React.createElement(ReactQueryCacheProvider, {\n    queryCache: queryCache,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui container\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    onSearchSubmit: onSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ImageList, {\n    images: images,\n    setImage: setImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/mdskrumi/Code/react-task-bs/unsplash-pics-new/src/components/App.js"],"names":["React","useState","useEffect","useQuery","QueryCache","ReactQueryCacheProvider","SearchBar","ImageList","queryCache","App","setImage","images","setImages","term","setTerm","onSearchSubmit","console","log","isLoading","error","data","key","params","rest","response","fetch","method","headers","Authorization","json","cacheTime","results","clear","message","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,uBAA/B,QAA8D,aAA9D;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAIA,MAAMC,UAAU,GAAG,IAAIJ,UAAJ,EAAnB;;AAGA,MAAMK,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC,CAD4B,CAE5B;;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,YAAD,CAAhC;;AAGA,QAAMc,cAAc,GAAIF,IAAD,IAAU;AAC/BG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAHD;;AAQA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BjB,QAAQ,CAAC,CAAC,QAAD,EAAW,OAAX,CAAD,EAAsB,OAAOkB,GAAP,EAAYC,MAAZ,EAAoB,GAAGC,IAAvB,KAAgC;AAE/FP,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGM,IAAf;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmDZ,IAApD,EAA0D;AACpFa,MAAAA,MAAM,EAAE,KAD4E;AAEpFC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE;AADR;AAF2E,KAA1D,CAA5B;AAMA,WAAOJ,QAAQ,CAACK,IAAT,EAAP;AACD,GAb0C,EAczC;AACEC,IAAAA,SAAS,EAAE;AADb,GAdyC,CAA3C;AAoBA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,IAAI,IAAIA,IAAI,CAACW,OAAjB,EAA0B;AACxBnB,MAAAA,SAAS,CAACQ,IAAI,CAACW,OAAN,CAAT;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAED;;AACD,WAAO,MAAM;AACXH,MAAAA,UAAU,CAACwB,KAAX;AACD,KAFD;AAGD,GATQ,EASN,CAACd,SAAD,EAAYE,IAAZ,CATM,CAAT;AAYAJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AAGA,MAAID,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,4BAA4BA,KAAK,CAACc,OAAxC,CAAP;AACD;;AAED,sBACE,oBAAC,uBAAD;AAAyB,IAAA,UAAU,EAAEzB,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAE0B,MAAAA,SAAS,EAAE;AAAb,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,cAAc,EAAEnB,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEJ,MAAnB;AAA2B,IAAA,QAAQ,EAAED,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAUD,CA/DD;;AAiEA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useQuery, QueryCache, ReactQueryCacheProvider } from 'react-query';\n\nimport SearchBar from \"./SearchBar\";\nimport ImageList from \"./ImageList\";\n\n\n\nconst queryCache = new QueryCache();\n\n\nconst App = ({ setImage }) => {\n  const [images, setImages] = useState([]);\n  // const [error_msg, setErrorMsg] = useState(\"\");\n  const [term, setTerm] = useState(\"Bangladesh\");\n\n\n  const onSearchSubmit = (term) => {\n    console.log(term);\n    setTerm(term);\n  };\n\n\n\n\n  const { isLoading, error, data } = useQuery(['Images', 'terms'], async (key, params, ...rest) => {\n\n    console.log(key);\n    console.log(params);\n    console.log(...rest);\n\n    const response = await fetch(\"https://api.unsplash.com/search/photos/?query=\" + term, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Client-ID R4Q_V32stbrWOzb3DpOntSfstan64mljhm-QftIjSCY\",\n      },\n    });\n    return response.json();\n  },\n    {\n      cacheTime: 0,\n    }\n  );\n\n\n  useEffect(() => {\n    if (data && data.results) {\n      setImages(data.results);\n      console.log(images);\n\n    }\n    return () => {\n      queryCache.clear();\n    }\n  }, [isLoading, data])\n\n\n  console.log(data);\n\n\n  if (error) {\n    return <div>{'An error has occurred: ' + error.message}</div>\n  }\n\n  return (\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <SearchBar onSearchSubmit={onSearchSubmit} />\n        <ImageList images={images} setImage={setImage} />\n      </div>\n    </ReactQueryCacheProvider>\n  )\n\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}